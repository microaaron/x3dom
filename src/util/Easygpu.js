/** 
 * EASYGPU 0.0.1 alpha
 * Build : 14
 * Revision: 7e57378ddbe8fbd7ba3a2f673da7134f74cb01d5
 * Date: Sat Dec 14 04:56:28 2024 +0800
 */
var easygpu={webgpu:{},wgsl:{},about:{version:"0.0.1 alpha",build:"14",revision:"7e57378ddbe8fbd7ba3a2f673da7134f74cb01d5",date:"Sat Dec 14 04:56:28 2024 +0800"}};easygpu.BindingListArray=class e extends Array{addBindingList(e){return this.push(e),this}createShaderModuleBindingCodes(){var e="",t="",r="";for(var s of this){var a=this.indexOf(s);for(var i of s){var n=i.entry.binding,o="var";if(i.entry.buffer){let e,t=i.entry.buffer.type;t=t||"uniform";let r=void 0;switch(t){case"uniform":e="uniform";break;case"storage":e="storage",r="read_write";break;case"read-only-storage":e="storage"}o+=`<${e}${r?","+r:""}>`}var u=`@group(${a}) @binding(${n}) ${o} ${i.name}: ${i.wgslType};\n`,p=i.entry.visibility;p&GPUShaderStage.VERTEX&&(e+=u),p&GPUShaderStage.FRAGMENT&&(t+=u),p&GPUShaderStage.COMPUTE&&(r+=u)}}return{vertexBindingCode:e,fragmentBindingCode:t,computeBindingCode:r}}getBindGroupLayouts(e){if(!this.bindGroupLayouts)for(var t of(this.bindGroupLayouts=[],this))this.bindGroupLayouts.push(t.getBindGroupLayout(e));return this.bindGroupLayouts}static newBindingParamsList(){return new e.BindingParamsList}static BindingParamsList=class extends Array{addBindingParams(e,t,r,s){return this.push({name:e,wgslType:t,visibility:r,resourceLayoutObject:s}),this}createBindingList(){var e=new class extends Array{createBindGroupLayout(e){return this.bindGroupLayout=e.createBindGroupLayout(this.bindGroupLayoutDescriptor)}getBindGroupLayout(e){return this.bindGroupLayout?this.bindGroupLayout:this.createBindGroupLayout(e)}},t=new easygpu.webgpu.GPUBindGroupLayoutDescriptor;for(var r of this){var s=t.newEntry(t.entries.length,r.visibility,r.resourceLayoutObject);t.entries.push(s),e.push(new class{name=r.name;wgslType=r.wgslType;entry=s})}return e.bindGroupLayoutDescriptor=t,e}}},easygpu.BindingListArray.prototype.newBindingParamsList=easygpu.BindingListArray.newBindingParamsList,easygpu.VertexListArray=class e extends Array{addVertexList(e){return this.push(e),this}createVertexBufferLayouts(){this.vertexBufferLayouts=new class extends Array{};var e=0;for(var t of this){for(var r of t.vertexBufferLayout.attributes)r.shaderLocation=e,e++;this.vertexBufferLayouts.push(t.vertexBufferLayout)}return this.vertexBufferLayouts}createShaderModuleVertexInputCode(){this.vertexBufferLayouts||this.createVertexBufferLayouts();var e=[];for(var t of this)for(var r of t)e.push(`@location(${r.vertexAttribute.shaderLocation}) ${r.name}: ${r.wgslType}`);return e.join()}static newVertexParamsList(){return new e.VertexParamsList}static VertexParamsList=class extends Array{addVertexParams(e,t,r,s){return this.push({name:e,wgslType:t,format:r,offset:s}),this}createVertexList(e,t){var r=new class extends Array{},s=new easygpu.webgpu.GPUVertexBufferLayout(e,t),a=0,i=new easygpu.webgpu.GPUVertexFormat;for(var n of this)if(Number.isInteger(n.offset)){var o=n.format,u=n.offset,p=i.byteSizeOf(o),g=new easygpu.webgpu.GPUVertexAttribute(o,u);s.attributes.push(g),r.push({name:n.name,wgslType:n.wgslType,vertexAttribute:g}),a=(a>u?a:u)+p}for(var n of this)if(!Number.isInteger(n.offset)){o=n.format,u=a,p=i.byteSizeOf(o),g=new easygpu.webgpu.GPUVertexAttribute(o,u);s.attributes.push(g),r.push(new class{name=n.name;wgslType=n.wgslType;vertexAttribute=g}),a+=p}return s.setArrayStride(Number.isInteger(e)&&e||a),r.vertexBufferLayout=s,r}}},easygpu.VertexListArray.prototype.newVertexParamsList=easygpu.VertexListArray.newVertexParamsList,easygpu.ShaderModuleInputOutputList=class extends Array{add(e,t){return this.push({name:e,wgslType:t}),this}createShaderModuleInputOutputCode(){var e=0,t=[];for(var r of this)t.push(`@location(${e}) ${r.name}: ${r.wgslType}`),e++;return t.join()}},easygpu.PassResource=class e{constructor(t,r){if(t instanceof GPUDevice)this.bindingListArray,this.bindGroupDescriptors=[],this.bindGroupResources={},this.bindGroups=[],this.assets={},Object.defineProperty(this,"device",{get:function(){return t},enumerable:!0,configurable:!0});else if(t instanceof e)return t.copy(r)}initBindGroupDescriptor(e,t){const r=this.device;let s,a=!0;const i=e.getBindGroupLayout(r),n=[],o=new class extends easygpu.webgpu.GPUBindGroupDescriptor{update(){a=!0}setUpdated(e){a=!!e}isUpdated(){return a}getBindGroup(){return a&&(s=r.createBindGroup(this),a=!1),s}getResources(){t=[];for(const e of n)e&&e.resource&&(t[e.binding]=e.resource);return t}initEntry(e,t,r={}){const s=e.device,i=t.entry.binding;let n;if(r[t.name])n=r[t.name];else if(r[i])n=r[i];else if(t.entry.buffer){let e=easygpu.wgsl.sizeOf(t.wgslType),r=GPUBufferUsage.COPY_DST;switch(t.entry.buffer.type){case"storage":r|=GPUBufferUsage.SRC;case"read-only-storage":r|=GPUBufferUsage.STORAGE;break;case"uniform":case void 0:r|=GPUBufferUsage.UNIFORM}const a=!1,i=t.name,o=new easygpu.webgpu.GPUBufferDescriptor(e,r,a,i),u=s.createBuffer(o),p=void 0;e=void 0,n=new easygpu.webgpu.GPUBufferBinding(u,p,e)}const o=easygpu.webgpu.GPUBindGroupDescriptor.newEntry(i,n);if(this.entries[i]=o,t.entry.buffer){if(n.buffer instanceof GPUBuffer){const r=function e(t){var r;switch(!0){case/^f16$/.test(t):return;case/^i32$/.test(t):return Int32Array;case/^u32$/.test(t):return Uint32Array;case/^f32$/.test(t):return Float32Array;case!!(r=t.match(/^atomic<(.*)>$/)):return e(r[1]);case!!(r=t.match(/^vec\d+(.*)$/)):switch(!0){case!!(r=(s=r[1]).match(/^<(.*)>$/)):return e(r[1]);case/^h$/.test(s):return e("f16");case/^i$/.test(s):return e("i32");case/^u$/.test(s):return e("u32");case/^f$/.test(s):return e("f32");default:return}case!!(r=t.match(/^mat\d+x(\d+)(.*)$/)):var s;return e(`vec${Number(r[1])}${s=r[2]}`);case!!(r=t.match(/^array<(.*),\d+>$/)):case!!(r=t.match(/^array<(.*)(?<!,\d+)>$/)):return e(r[1]);default:return}}(t.wgslType);Object.defineProperty(e.bindGroupResources,t.name,{get:function(){return o.resource.buffer},set:function(e){let t;if(ArrayBuffer.isView(e))t=e;else if(e instanceof ArrayBuffer)t=new DataView(e);else{if(!r)return;if("number"==typeof e||e instanceof Number)t=new r([e]);else{if(!(e instanceof Array))return;t=new r(e)}}t.byteLength!=o.resource.buffer.size&&(o.resource.buffer.destroy(),o.resource.setBuffer(s.createBuffer(new easygpu.webgpu.GPUBufferDescriptor(t.byteLength,o.resource.buffer.usage,!1,o.resource.buffer.label))),a=!0),s.queue.writeBuffer(o.resource.buffer,0,t.buffer,t.byteOffset,t.byteLength)},enumerable:!0,configurable:!0})}}else t.entry.sampler?Object.defineProperty(e.bindGroupResources,t.name,{get:function(){return o.resource},set:function(e){switch(!0){case e instanceof GPUSampler:o.setResource(e);break;default:o.setResource(s.createSampler(e))}},enumerable:!0,configurable:!0}):t.entry.texture||t.entry.storageTexture?Object.defineProperty(e.bindGroupResources,t.name,{get:function(){return o.resource},set:function(e){switch(!0){case e instanceof GPUTextureView:o.setResource(e);break;case e instanceof GPUTexture:o.setResource(e.createView())}},enumerable:!0,configurable:!0}):t.entry.externalTexture&&Object.defineProperty(e.bindGroupResources,t.name,{get:function(){return o.resource},set:function(e){switch(!0){case e instanceof GPUExternalTexture:o.setResource(e)}},enumerable:!0,configurable:!0});a=!0}initEntries(e,t,r){for(const s of t)s&&this.initEntry(e,s,r)}}(i,n,void 0);return o.initEntries(this,e,t),o}initBindGroup(e,t){Object.defineProperty(this.bindGroups,e,{get:function(){return t.getBindGroup()},enumerable:!0,configurable:!0})}initBindGroups(e=this.bindingListArray,t=[]){for(const r of e)if(r){const s=e.indexOf(r),a=this.initBindGroupDescriptor(r,t[s]);this.bindGroupDescriptors[s]=a,this.initBindGroup(s,a)}}copyBindGroupResourcesPropertyFromPassResource(e,t){Object.defineProperty(this.bindGroupResources,t,Object.getOwnPropertyDescriptor(e.bindGroupResources,t))}copy(e){let t;return e instanceof Object&&(t=Object.getOwnPropertyDescriptors(e)),Object.defineProperties(new this.constructor,Object.assign(Object.getOwnPropertyDescriptors(this),t))}},easygpu.ComputePassResource=class extends easygpu.PassResource{constructor(e,t){super(e,t)}},easygpu.RenderPassResource=class extends easygpu.PassResource{constructor(e,t){super(e,t),e instanceof GPUDevice&&(this.vertices={},this.vertexBuffers=[])}initRenderPipeline(e=new easygpu.webgpu.GPURenderPipelineDescriptor){let t,r=!0;Object.defineProperty(this,"renderPipelineDescriptor",{get:function(){return e},set:function(t){e=t,r=!0},enumerable:!0,configurable:!0}),Object.defineProperty(this,"renderPipeline",{get:function(){return r&&(t=this.device.createRenderPipeline(e),r=!1),t},enumerable:!0,configurable:!0})}initVertexBuffer(e,t){const r=this.device,s=[];for(const e of t)s.push(e.name);let a;const i=s.join("_");Object.defineProperty(this.vertices,i,{get:function(){return a},set:function(e){let t;if(ArrayBuffer.isView(e))t=e;else{if(!(e instanceof ArrayBuffer))return e instanceof GPUBuffer?(a instanceof GPUBuffer&&a.destroy(),void(a=e)):void 0;t=new DataView(e)}switch(!0){case a instanceof GPUBuffer&&t.byteLength!=a.size:a.destroy();case!(a instanceof GPUBuffer):const e=t.byteLength,s=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,n=!1,o=i,u=new easygpu.webgpu.GPUBufferDescriptor(e,s,n,o);a=r.createBuffer(u);default:r.queue.writeBuffer(a,0,t.buffer,t.byteOffset,t.byteLength)}},enumerable:!0,configurable:!0}),Object.defineProperty(this.vertexBuffers,e,{get:function(){return a},enumerable:!0,configurable:!0})}initVertexBuffers(e=this.vertexListArray){for(const t of e)t&&this.initVertexBuffer(e.indexOf(t),t)}initIndexBuffer(){const e=this.device;let t;Object.defineProperty(this,"indexBuffer",{get:function(){return t},set:function(r){switch(!0){case r instanceof Uint16Array:this.indexFormat="uint16";break;case r instanceof Uint32Array:this.indexFormat="uint32";break;case r instanceof Array:r=new Uint32Array(r),this.indexFormat="uint32";break;case"number"==typeof r||r instanceof Number:r=new Uint32Array([r]),this.indexFormat="uint32";break;case r instanceof GPUBuffer:return t instanceof GPUBuffer&&t.destroy(),void(t=r);default:return}switch(!0){case t instanceof GPUBuffer&&r.byteLength!=t.size:t.destroy();case!(t instanceof GPUBuffer):const s=r.byteLength,a=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST,i=!1;let n;const o=new easygpu.webgpu.GPUBufferDescriptor(s,a,i,n);t=e.createBuffer(o);default:e.queue.writeBuffer(t,0,r.buffer,r.byteOffset,r.byteLength)}},enumerable:!0,configurable:!0})}},easygpu.wgsl.alignOf=function(e){var t;switch(!0){case/^f16$/.test(e):return 2;case/^i32$|^u32$|^f32$|^atomic<.*>$/.test(e):return 4;case!!(t=e.match(/^vec(\d+)(.*)$/)):var r=Number(t[1]);switch(3==r&&r++,!0){case!!(t=(a=t[2]).match(/^<(.*)>$/)):return r*easygpu.wgsl.sizeOf(t[1]);case/^i$|^u$|^f$/.test(a):return 4*r;case/^h$/.test(a):return 2*r;default:return 0}case!!(t=e.match(/^mat\d+x(\d+)(.*)$/)):var s=Number(t[1]),a=t[2];return easygpu.wgsl.alignOf(`vec${s}${a}`);case!!(t=e.match(/^array<(.*),\d+>$/)):case!!(t=e.match(/^array<(.*)(?<!,\d+)>$/)):var i=t[1];return easygpu.wgsl.alignOf(i);default:return 0}},easygpu.wgsl.sizeOf=function(e){var t;switch(!0){case/^f16$/.test(e):return 2;case/^i32$|^u32$|^f32$|^atomic<.*>$/.test(e):return 4;case!!(t=e.match(/^vec(\d+)(.*)$/)):var r=Number(t[1]);switch(!0){case!!(t=(i=t[2]).match(/^<(.*)>$/)):return r*easygpu.wgsl.sizeOf(t[1]);case/^i$|^u$|^f$/.test(i):return 4*r;case/^h$/.test(i):return 2*r;default:return 0}break;case!!(t=e.match(/^mat(\d+)x(\d+)(.*)$/)):var s=Number(t[1]),a=Number(t[2]),i=t[3];return easygpu.wgsl.sizeOf(`array<vec${a}${i},${s}>`);case!!(t=e.match(/^array<(.*),(\d+)>$/)):var n=t[1],o=(r=Number(t[2]),easygpu.wgsl.sizeOf(n)),u=easygpu.wgsl.alignOf(n);return r*(Math.ceil(o/u)*u);default:return 0}},easygpu.webgpu.GPUObjectDescriptorBase=class{constructor(e){this.label=e}setLabel(e){this.label=e}get[Symbol.toStringTag](){return"GPUObjectDescriptorBase"}},easygpu.webgpu.GPURequestAdapterOptions=class{constructor(e,t){this.powerPreference=e,this.forceFallbackAdapter=t}setPowerPreference(e){this.powerPreference=e}setForceFallbackAdapter(e){this.forceFallbackAdapter=e}static getAvailablePowerPreferences(){return new easygpu.webgpu.GPUPowerPreference}get[Symbol.toStringTag](){return"GPURequestAdapterOptions"}},easygpu.webgpu.GPURequestAdapterOptions.prototype.getAvailablePowerPreferences=easygpu.webgpu.GPURequestAdapterOptions.getAvailablePowerPreferences,easygpu.webgpu.GPUPowerPreference=class{low_power="low-power";high_performance="high-performance";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUPowerPreference"}},easygpu.webgpu.GPUDeviceDescriptor=class{constructor(e=[],t={},r={}){this.requiredFeatures=e,this.requiredLimits=t,this.defaultQueue=r}setRequiredFeatures(e){this.requiredFeatures=e}setRequiredLimits(e){this.requiredLimits=e}setDefaultQueue(e){this.defaultQueue=e}static getAvailableRequiredFeatures(){return new easygpu.webgpu.GPUFeatureName}get[Symbol.toStringTag](){return"GPUDeviceDescriptor"}},easygpu.webgpu.GPUDeviceDescriptor.prototype.getAvailableRequiredFeatures=easygpu.webgpu.GPUDeviceDescriptor.getAvailableRequiredFeatures,easygpu.webgpu.GPUFeatureName=class{depth_clip_control="depth-clip-control";depth32float_stencil8="depth32float-stencil8";texture_compression_bc="texture-compression-bc";texture_compression_bc_sliced_3d="texture-compression-bc-sliced-3d";texture_compression_etc2="texture-compression-etc2";texture_compression_astc="texture-compression-astc";texture_compression_astc_sliced_3d="texture-compression-astc-sliced-3d";timestamp_query="timestamp-query";indirect_first_instance="indirect-first-instance";shader_f16="shader-f16";rg11b10ufloat_renderable="rg11b10ufloat-renderable";bgra8unorm_storage="bgra8unorm-storage";float32_filterable="float32-filterable";float32_blendable="float32-blendable";clip_distances="clip-distances";dual_source_blending="dual-source-blending";constructor(e){e.features.has("depth-clip-control")||delete this.depth_clip_control,e.features.has("depth32float-stencil8")||delete this.thisdepth32float_stencil8,e.features.has("texture-compression-bc")||delete this.texture_compression_bc,e.features.has("texture-compression-bc-sliced-3d")||delete this.texture_compression_bc_sliced_3d,e.features.has("texture-compression-etc2")||delete this.texture_compression_etc2,e.features.has("texture-compression-astc")||delete this.texture_compression_astc,e.features.has("texture-compression-astc-sliced-3d")||delete this.texture_compression_astc_sliced_3d,e.features.has("timestamp-query")||delete this.timestamp_query,e.features.has("indirect-first-instance")||delete this.indirect_first_instance,e.features.has("shader-f16")||delete this.shader_f16,e.features.has("rg11b10ufloat-renderable")||delete this.rg11b10ufloat_renderable,e.features.has("bgra8unorm-storage")||delete this.bgra8unorm_storage,e.features.has("float32-filterable")||delete this.float32_filterable,e.features.has("float32-blendable")||delete this.float32_blendable,e.features.has("clip-distances")||delete this.clip_distances,e.features.has("dual-source-blending")||delete this.dual_source_blending,Object.freeze(this)}get[Symbol.toStringTag](){return"GPUFeatureName"}},easygpu.webgpu.GPUBufferMapState=class{unmapped="unmapped";pending="pending";mapped="mapped";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUBufferMapState"}},easygpu.webgpu.GPUBufferDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r,s){super(s),this.size=e,this.usage=t,this.mappedAtCreation=r}setSize(e){this.size=e}setUsage(e){this.usage=e}setMappedAtCreation(e){this.mappedAtCreation=e}static getAvailableUsages(){return new easygpu.webgpu.GPUBufferUsage}get[Symbol.toStringTag](){return"GPUBufferDescriptor"}},easygpu.webgpu.GPUBufferDescriptor.prototype.getAvailableUsages=easygpu.webgpu.GPUBufferDescriptor.getAvailableUsages,easygpu.webgpu.GPUBufferUsage=class{MAP_READ=1;MAP_WRITE=2;COPY_SRC=4;COPY_DST=8;INDEX=16;VERTEX=32;UNIFORM=64;STORAGE=128;INDIRECT=256;QUERY_RESOLVE=512;constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUBufferUsage"}},easygpu.webgpu.GPUMapMode=class{READ=1;WRITE=2;constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUMapMode"}},easygpu.webgpu.GPUTextureDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r,s,a,i,n=[],o){super(o),this.size=e,this.mipLevelCount=t,this.sampleCount=r,this.dimension=s,this.format=a,this.usage=i,this.viewFormats=n}setSize(e){this.size=e}setMipLevelCount(e){this.mipLevelCount=e}setSampleCount(e){this.sampleCount=e}setDimension(e){this.dimension=e}setFormat(e){this.format=e}setUsage(e){this.usage=e}setViewFormats(e){this.viewFormats=e}static newSize(e,t,r){return new easygpu.webgpu.GPUExtent3DDict(e,t,r)}static getAvailableDimensions(){return new easygpu.webgpu.GPUTextureDimension}static getAvailableFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableUsages(){return new easygpu.webgpu.GPUTextureUsage}static getAvailableViewFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}get[Symbol.toStringTag](){return"GPUTextureDescriptor"}},easygpu.webgpu.GPUTextureDescriptor.prototype.newSize=easygpu.webgpu.GPUTextureDescriptor.newSize,easygpu.webgpu.GPUTextureDescriptor.prototype.getAvailableDimensions=easygpu.webgpu.GPUTextureDescriptor.getAvailableDimensions,easygpu.webgpu.GPUTextureDescriptor.prototype.getAvailableFormats=easygpu.webgpu.GPUTextureDescriptor.getAvailableFormats,easygpu.webgpu.GPUTextureDescriptor.prototype.getAvailableUsages=easygpu.webgpu.GPUTextureDescriptor.getAvailableUsages,easygpu.webgpu.GPUTextureDescriptor.prototype.getAvailableViewFormats=easygpu.webgpu.GPUTextureDescriptor.getAvailableViewFormats,easygpu.webgpu.GPUTextureDimension=class{_1d="1d";_2d="2d";_3d="3d";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureDimension"}},easygpu.webgpu.GPUTextureUsage=class{COPY_SRC=1;COPY_DST=2;TEXTURE_BINDING=4;STORAGE_BINDING=8;RENDER_ATTACHMENT=16;constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureUsage"}},easygpu.webgpu.GPUTextureViewDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r,s,a,i,n,o){super(o),this.format=e,this.dimension=t,this.aspect=r,this.baseMipLevel=s,this.mipLevelCount=a,this.baseArrayLayer=i,this.arrayLayerCount=n}setFormat(e){this.format=e}setDimension(e){this.dimension=e}setAspect(e){this.aspect=e}setBaseMipLevel(e){this.baseMipLevel=e}setMipLevelCount(e){this.mipLevelCount=e}setBaseArrayLayer(e){this.baseArrayLayer=e}setArrayLayerCount(e){this.arrayLayerCount=e}static getAvailableFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableDimensions(){return new easygpu.webgpu.GPUTextureViewDimension}static getAvailableAspects(){return new easygpu.webgpu.GPUTextureAspect}get[Symbol.toStringTag](){return"GPUTextureViewDescriptor"}},easygpu.webgpu.GPUTextureViewDescriptor.prototype.getAvailableFormats=easygpu.webgpu.GPUTextureViewDescriptor.getAvailableFormats,easygpu.webgpu.GPUTextureViewDescriptor.prototype.getAvailableDimensions=easygpu.webgpu.GPUTextureViewDescriptor.getAvailableDimensions,easygpu.webgpu.GPUTextureViewDescriptor.prototype.getAvailableAspects=easygpu.webgpu.GPUTextureViewDescriptor.getAvailableAspects,easygpu.webgpu.GPUTextureViewDimension=class{_1d="1d";_2d="2d";_2d_array="2d-array";cube="cube";cube_array="cube-array";_3d="3d";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureViewDimension"}},easygpu.webgpu.GPUTextureAspect=class{all="all";stencil_only="stencil-only";depth_only="depth-only";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureAspect"}},easygpu.webgpu.GPUTextureFormat=class{r8unorm="r8unorm";r8snorm="r8snorm";r8uint="r8uint";r8sint="r8sint";r16uint="r16uint";r16sint="r16sint";r16float="r16float";rg8unorm="rg8unorm";rg8snorm="rg8snorm";rg8uint="rg8uint";rg8sint="rg8sint";r32uint="r32uint";r32sint="r32sint";r32float="r32float";rg16uint="rg16uint";rg16sint="rg16sint";rg16float="rg16float";rgba8unorm="rgba8unorm";rgba8unorm_srgb="rgba8unorm-srgb";rgba8snorm="rgba8snorm";rgba8uint="rgba8uint";rgba8sint="rgba8sint";bgra8unorm="bgra8unorm";bgra8unorm_srgb="bgra8unorm-srgb";rgb9e5ufloat="rgb9e5ufloat";rgb10a2uint="rgb10a2uint";rgb10a2unorm="rgb10a2unorm";rg11b10ufloat="rg11b10ufloat";rg32uint="rg32uint";rg32sint="rg32sint";rg32float="rg32float";rgba16uint="rgba16uint";rgba16sint="rgba16sint";rgba16float="rgba16float";rgba32uint="rgba32uint";rgba32sint="rgba32sint";rgba32float="rgba32float";stencil8="stencil8";depth16unorm="depth16unorm";depth24plus="depth24plus";depth24plus_stencil8="depth24plus-stencil8";depth32float="depth32float";constructor(e){e&&!e.features.has("depth32float-stencil8")||(this.depth32float_stencil8="depth32float-stencil8"),e&&!e.features.has("texture-compression-bc")||(this.bc1_rgba_unorm="bc1-rgba-unorm",this.bc1_rgba_unorm_srgb="bc1-rgba-unorm-srgb",this.bc2_rgba_unorm="bc2-rgba-unorm",this.bc2_rgba_unorm_srgb="bc2-rgba-unorm-srgb",this.bc3_rgba_unorm="bc3-rgba-unorm",this.bc3_rgba_unorm_srgb="bc3-rgba-unorm-srgb",this.bc4_r_unorm="bc4-r-unorm",this.bc4_r_snorm="bc4-r-snorm",this.bc5_rg_unorm="bc5-rg-unorm",this.bc5_rg_snorm="bc5-rg-snorm",this.bc6h_rgb_ufloat="bc6h-rgb-ufloat",this.bc6h_rgb_float="bc6h-rgb-float",this.bc7_rgba_unorm="bc7-rgba-unorm",this.bc7_rgba_unorm_srgb="bc7-rgba-unorm-srgb"),e&&!e.features.has("texture-compression-etc2")||(this.etc2_rgb8unorm="etc2-rgb8unorm",this.etc2_rgb8unorm_srgb="etc2-rgb8unorm-srgb",this.etc2_rgb8a1unorm="etc2-rgb8a1unorm",this.etc2_rgb8a1unorm_srgb="etc2-rgb8a1unorm-srgb",this.etc2_rgba8unorm="etc2-rgba8unorm",this.etc2_rgba8unorm_srgb="etc2-rgba8unorm-srgb",this.eac_r11unorm="eac-r11unorm",this.eac_r11snorm="eac-r11snorm",this.eac_rg11unorm="eac-rg11unorm",this.eac_rg11snorm="eac-rg11snorm"),e&&!e.features.has("texture-compression-astc")||(this.astc_4x4_unorm="astc-4x4-unorm",this.astc_4x4_unorm_srgb="astc-4x4-unorm-srgb",this.astc_5x4_unorm="astc-5x4-unorm",this.astc_5x4_unorm_srgb="astc-5x4-unorm-srgb",this.astc_5x5_unorm="astc-5x5-unorm",this.astc_5x5_unorm_srgb="astc-5x5-unorm-srgb",this.astc_6x5_unorm="astc-6x5-unorm",this.astc_6x5_unorm_srgb="astc-6x5-unorm-srgb",this.astc_6x6_unorm="astc-6x6-unorm",this.astc_6x6_unorm_srgb="astc-6x6-unorm-srgb",this.astc_8x5_unorm="astc-8x5-unorm",this.astc_8x5_unorm_srgb="astc-8x5-unorm-srgb",this.astc_8x6_unorm="astc-8x6-unorm",this.astc_8x6_unorm_srgb="astc-8x6-unorm-srgb",this.astc_8x8_unorm="astc-8x8-unorm",this.astc_8x8_unorm_srgb="astc-8x8-unorm-srgb",this.astc_10x5_unorm="astc-10x5-unorm",this.astc_10x5_unorm_srgb="astc-10x5-unorm-srgb",this.astc_10x6_unorm="astc-10x6-unorm",this.astc_10x6_unorm_srgb="astc-10x6-unorm-srgb",this.astc_10x8_unorm="astc-10x8-unorm",this.astc_10x8_unorm_srgb="astc-10x8-unorm-srgb",this.astc_10x10_unorm="astc-10x10-unorm",this.astc_10x10_unorm_srgb="astc-10x10-unorm-srgb",this.astc_12x10_unorm="astc-12x10-unorm",this.astc_12x10_unorm_srgb="astc-12x10-unorm-srgb",this.astc_12x12_unorm="astc-12x12-unorm",this.astc_12x12_unorm_srgb="astc-12x12-unorm-srgb"),Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureFormat"}},easygpu.webgpu.GPUExternalTextureDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r){super(r),this.source=e,this.colorSpace=t}setSource(e){this.source=e}setColorSpace(e){this.colorSpace=e}get[Symbol.toStringTag](){return"GPUExternalTextureDescriptor"}},easygpu.webgpu.GPUSamplerDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r,s,a,i,n,o,u,p,g){super(g),this.addressModeU=e,this.addressModeV=t,this.addressModeW=r,this.magFilter=s,this.minFilter=a,this.mipmapFilter=i,this.lodMinClamp=n,this.lodMaxClamp=o,this.compare=u,this.maxAnisotropy=p}setAddressModeU(e){this.addressModeU=e}setAddressModeV(e){this.addressModeV=e}setAddressModeW(e){this.addressModeW=e}setMagFilter(e){this.magFilter=e}setMinFilter(e){this.minFilter=e}setMipmapFilter(e){this.mipmapFilter=e}setLodMinClamp(e){this.lodMinClamp=e}setLodMaxClamp(e){this.lodMaxClamp=e}setCompare(e){this.compare=e}setMaxAnisotropy(e){this.maxAnisotropy=e}static getAvailableAddressModeUs(){return new easygpu.webgpu.GPUAddressMode}static getAvailableAddressModeVs(){return new easygpu.webgpu.GPUAddressMode}static getAvailableAddressModeWs(){return new easygpu.webgpu.GPUAddressMode}static getAvailableMagFilters(){return new easygpu.webgpu.GPUFilterMode}static getAvailableMinFilters(){return new easygpu.webgpu.GPUFilterMode}static getAvailableMipmapFilters(){return new easygpu.webgpu.GPUMipmapFilterMode}static getAvailableCompares(){return new easygpu.webgpu.GPUCompareFunction}get[Symbol.toStringTag](){return"GPUSamplerDescriptor"}},easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableAddressModeUs=easygpu.webgpu.GPUSamplerDescriptor.getAvailableAddressModeUs,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableAddressModeVs=easygpu.webgpu.GPUSamplerDescriptor.getAvailableAddressModeVs,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableAddressModeWs=easygpu.webgpu.GPUSamplerDescriptor.getAvailableAddressModeWs,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableMagFilters=easygpu.webgpu.GPUSamplerDescriptor.getAvailableMagFilters,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableMinFilters=easygpu.webgpu.GPUSamplerDescriptor.getAvailableMinFilters,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableMipmapFilters=easygpu.webgpu.GPUSamplerDescriptor.getAvailableMipmapFilters,easygpu.webgpu.GPUSamplerDescriptor.prototype.getAvailableCompares=easygpu.webgpu.GPUSamplerDescriptor.getAvailableCompares,easygpu.webgpu.GPUAddressMode=class{clamp_to_edge="clamp-to-edge";repeat="repeat";mirror_repeat="mirror-repeat";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUAddressMode"}},easygpu.webgpu.GPUFilterMode=class{nearest="nearest";linear="linear";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUFilterMode"}},easygpu.webgpu.GPUMipmapFilterMode=class{nearest="nearest";linear="linear";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUMipmapFilterMode"}},easygpu.webgpu.GPUCompareFunction=class{never="never";less="less";equal="equal";less_equal="less-equal";greater="greater";not_equal="not-equal";greater_equal="greater-equal";always="always";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUCompareFunction"}},easygpu.webgpu.GPUBindGroupLayoutDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e=[],t){super(t),this.entries=e}setEntries(e){this.entries=e}static newEntry(e,t,r){return new easygpu.webgpu.GPUBindGroupLayoutEntry(e,t,r)}get[Symbol.toStringTag](){return"GPUBindGroupLayoutDescriptor"}},easygpu.webgpu.GPUBindGroupLayoutDescriptor.prototype.newEntry=easygpu.webgpu.GPUBindGroupLayoutDescriptor.newEntry,easygpu.webgpu.GPUStorageTextureAccess=class{write_only="write-only";read_only="read-only";read_write="read-write";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUStorageTextureAccess"}},easygpu.webgpu.GPUStorageTextureBindingLayout=class{constructor(e,t,r){this.access=e,this.format=t,this.viewDimension=r}setAccess(e){this.access=e}setFormat(e){this.format=e}setViewDimension(e){this.viewDimension=e}static getAvailableFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableViewDimensions(){return new easygpu.webgpu.GPUTextureViewDimension}get[Symbol.toStringTag](){return"GPUStorageTextureBindingLayout"}},easygpu.webgpu.GPUStorageTextureBindingLayout.prototype.getAvailableFormats=easygpu.webgpu.GPUStorageTextureBindingLayout.getAvailableFormats,easygpu.webgpu.GPUStorageTextureBindingLayout.prototype.getAvailableViewDimensions=easygpu.webgpu.GPUStorageTextureBindingLayout.getAvailableViewDimensions,easygpu.webgpu.GPUExternalTextureBindingLayout=class{get[Symbol.toStringTag](){return"GPUExternalTextureBindingLayout "}},easygpu.webgpu.GPUBindGroupLayoutEntry=class{constructor(e,t,r){this.binding=e,this.visibility=t,r instanceof easygpu.webgpu.GPUBufferBindingLayout?this.buffer=r:r instanceof easygpu.webgpu.GPUSamplerBindingLayout?this.sampler=r:r instanceof easygpu.webgpu.GPUTextureBindingLayout?this.texture=r:r instanceof easygpu.webgpu.GPUStorageTextureBindingLayout?this.storageTexture=r:r instanceof easygpu.webgpu.GPUExternalTextureBindingLayout?this.externalTexture=r:r instanceof Object?r.buffer instanceof Object?this.buffer=r.buffer:r.sampler instanceof Object?this.sampler=r.sampler:r.texture instanceof Object?this.texture=r.texture:r.storageTexture instanceof Object?this.storageTexture=r.storageTexture:r.externalTexture instanceof Object?this.externalTexture=r.externalTexture:console.warn("unknown resourceLayoutObject"):console.warn("unknown resourceLayoutObject")}setBinding(e){this.deleteResourceLayoutObject(),this.binding=e}setVisibility(e){this.deleteResourceLayoutObject(),this.visibility=e}setBuffer(e){this.deleteResourceLayoutObject(),this.buffer=e}setSampler(e){this.deleteResourceLayoutObject(),this.sampler=e}setTexture(e){this.deleteResourceLayoutObject(),this.texture=e}setStorageTexture(e){this.deleteResourceLayoutObject(),this.storageTexture=e}setExternalTexture(e){this.deleteResourceLayoutObject(),this.externalTexture=e}deleteResourceLayoutObject(){delete this.buffer,delete this.sampler,delete this.texture,delete this.storageTexture,delete this.externalTexture}static newBuffer(e,t,r){return new easygpu.webgpu.GPUBufferBindingLayout(e,t,r)}static newSampler(e){return new easygpu.webgpu.GPUSamplerBindingLayout(e)}static newTexture(e,t,r){return new easygpu.webgpu.GPUTextureBindingLayout(e,t,r)}static newStorageTexture(e,t,r){return new easygpu.webgpu.GPUStorageTextureBindingLayout(e,t,r)}static newExternalTexture(){return new easygpu.webgpu.GPUExternalTextureBindingLayout}static getAvailableVisibilities(){return new easygpu.webgpu.GPUShaderStage}get[Symbol.toStringTag](){return"GPUBindGroupLayoutEntry"}},easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.newBuffer=easygpu.webgpu.GPUBindGroupLayoutEntry.newBuffer,easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.newSampler=easygpu.webgpu.GPUBindGroupLayoutEntry.newSampler,easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.newTexture=easygpu.webgpu.GPUBindGroupLayoutEntry.newTexture,easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.newStorageTexture=easygpu.webgpu.GPUBindGroupLayoutEntry.newStorageTexture,easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.newExternalTexture=easygpu.webgpu.GPUBindGroupLayoutEntry.newExternalTexture,easygpu.webgpu.GPUBindGroupLayoutEntry.prototype.getAvailableVisibilities=easygpu.webgpu.GPUBindGroupLayoutEntry.getAvailableVisibilities,easygpu.webgpu.GPUShaderStage=class{VERTEX=1;FRAGMENT=2;COMPUTE=4;constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUShaderStage"}},easygpu.webgpu.GPUBufferBindingType=class{uniform="uniform";storage="storage";read_only_storage="read-only-storage";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUBufferBindingType"}},easygpu.webgpu.GPUBufferBindingLayout=class{constructor(e,t,r){this.type=e,this.hasDynamicOffset=t,this.minBindingSize=r}setType(e){this.type=e}setHasDynamicOffset(e){this.hasDynamicOffset=e}setMinBindingSize(e){this.minBindingSize=e}static getAvailableTypes(){return new easygpu.webgpu.GPUBufferBindingType}get[Symbol.toStringTag](){return"GPUBufferBindingLayout"}},easygpu.webgpu.GPUBufferBindingLayout.prototype.getAvailableTypes=easygpu.webgpu.GPUBufferBindingLayout.getAvailableTypes,easygpu.webgpu.GPUSamplerBindingType=class{filtering="filtering";non_filtering="non-filtering";comparison="comparison";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUSamplerBindingType"}},easygpu.webgpu.GPUSamplerBindingLayout=class{constructor(e){this.type=e}setType(e){this.type=e}static getAvailableTypes(){return new easygpu.webgpu.GPUSamplerBindingType}get[Symbol.toStringTag](){return"GPUSamplerBindingLayout"}},easygpu.webgpu.GPUSamplerBindingLayout.prototype.getAvailableTypes=easygpu.webgpu.GPUSamplerBindingLayout.getAvailableTypes,easygpu.webgpu.GPUTextureSampleType=class{float="float";unfilterable_float="unfilterable-float";depth="depth";sint="sint";uint="uint";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUTextureSampleType"}},easygpu.webgpu.GPUTextureBindingLayout=class{constructor(e,t,r){this.sampleType=e,this.viewDimension=t,this.multisampled=r}setSampleType(e){this.sampleType=e}setViewDimension(e){this.viewDimension=e}setFalse(e){this.multisampled=e}static getAvailableSampleTypes(){return new easygpu.webgpu.GPUTextureSampleType}static getAvailableViewDimensions(){return new easygpu.webgpu.GPUTextureViewDimension}get[Symbol.toStringTag](){return"GPUTextureBindingLayout"}},easygpu.webgpu.GPUTextureBindingLayout.prototype.getAvailableSampleTypes=easygpu.webgpu.GPUTextureBindingLayout.getAvailableSampleTypes,easygpu.webgpu.GPUTextureBindingLayout.prototype.getAvailableViewDimensions=easygpu.webgpu.GPUTextureBindingLayout.getAvailableViewDimensions,easygpu.webgpu.GPUBindGroupDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t=[],r){super(r),this.layout=e,this.entries=t}setLayout(e){this.layout=e}setEntries(e){this.entries=e}static newEntry(e,t){return new easygpu.webgpu.GPUBindGroupEntry(e,t)}get[Symbol.toStringTag](){return"GPUBindGroupDescriptor"}},easygpu.webgpu.GPUBindGroupDescriptor.prototype.newEntry=easygpu.webgpu.GPUBindGroupDescriptor.newEntry,easygpu.webgpu.GPUBindGroupEntry=class{constructor(e,t){this.binding=e,this.resource=t}setBinding(e){this.binding=e}setResource(e){this.resource=e}static newResource_GPUBufferBinding(e,t,r){return new easygpu.webgpu.GPUBufferBinding(e,t,r)}get[Symbol.toStringTag](){return"GPUBindGroupEntry"}},easygpu.webgpu.GPUBindGroupEntry.prototype.newResource_GPUBufferBinding=easygpu.webgpu.GPUBindGroupEntry.newResource_GPUBufferBinding,easygpu.webgpu.GPUBufferBinding=class{constructor(e,t,r){this.buffer=e,this.offset=t,this.size=r}setBuffer(e){this.buffer=e}setOffset(e){this.offset=e}setSize(e){this.size=e}get[Symbol.toStringTag](){return"GPUBufferBinding"}},easygpu.webgpu.GPUPipelineLayoutDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e=[],t){super(t),this.bindGroupLayouts=e}setBindGroupLayouts(e){this.bindGroupLayouts=e}get[Symbol.toStringTag](){return"GPUPipelineLayoutDescriptor"}},easygpu.webgpu.GPUShaderModuleDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r=[],s){super(s),this.code=e,this.sourceMap=t,this.compilationHints=r}setCode(e){this.code=e}setSourceMap(e){this.sourceMap=e}setCompilationHints(e){this.compilationHints=e}get[Symbol.toStringTag](){return"GPUShaderModuleDescriptor"}},easygpu.webgpu.GPUShaderModuleCompilationHint=class{constructor(e,t){this.entryPoint=e,this.layout=t}setEntryPoint(e){this.entryPoint=e}setLayout(e){this.layout=e}get[Symbol.toStringTag](){return"GPUShaderModuleCompilationHint"}},easygpu.webgpu.GPUCompilationMessageType=class{error="error";warning="warning";info="info";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUCompilationMessageType"}},easygpu.webgpu.GPUPipelineErrorInit=class{constructor(e){this.reason=e}setReason(e){this.reason=e}get[Symbol.toStringTag](){return"GPUPipelineErrorInit"}},easygpu.webgpu.GPUPipelineErrorReason=class{validation="validation";internal="internal";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUPipelineErrorReason"}},easygpu.webgpu.GPUAutoLayoutMode=class{auto="auto";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUAutoLayoutMode"}},easygpu.webgpu.GPUPipelineDescriptorBase=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e="auto",t){super(t),this.layout=e}setLayout(e){this.layout=e}get[Symbol.toStringTag](){return"GPUPipelineDescriptorBase"}},easygpu.webgpu.GPUProgrammableStage=class{constructor(e,t,r){this.module=e,this.entryPoint=t,this.constants=r}setModule(e){this.module=e}setEntryPoint(e){this.entryPoint=e}setConstants(e){this.constants=e}static newConstants(e){return new class{constructor(e){Object.assign(this,e)}add(e){Object.assign(this,e)}}(e)}get[Symbol.toStringTag](){return"GPUProgrammableStage"}},easygpu.webgpu.GPUProgrammableStage.prototype.newConstants=easygpu.webgpu.GPUProgrammableStage.newConstants,easygpu.webgpu.GPUComputePipelineDescriptor=class extends easygpu.webgpu.GPUPipelineDescriptorBase{constructor(e,t,r){super(e,r),this.compute=t}setCompute(e){this.compute=e}static newCompute(e,t,r){return new easygpu.webgpu.GPUProgrammableStage(e,t,r)}get[Symbol.toStringTag](){return"GPUComputePipelineDescriptor"}},easygpu.webgpu.GPUComputePipelineDescriptor.prototype.newCompute=easygpu.webgpu.GPUComputePipelineDescriptor.newCompute,easygpu.webgpu.GPURenderPipelineDescriptor=class extends easygpu.webgpu.GPUPipelineDescriptorBase{constructor(e,t,r,s,a,i,n){super(e,n),this.vertex=t,this.fragment=r,this.primitive=s,this.depthStencil=a,this.multisample=i,this.vertex||(this.vertex=this.newVrtex())}setVrtex(e){this.vertex=e}setPrimitive(e){this.primitive=e}setDepthStencil(e){this.depthStencil=e}setMultisample(e){this.multisample=e}setFragment(e){this.fragment=e}static newVrtex(e,t,r,s){return new easygpu.webgpu.GPUVertexState(e,t,r,s)}static newFragment(e,t,r,s){return new easygpu.webgpu.GPUFragmentState(e,t,r,s)}static newPrimitive(e,t,r,s,a){return new easygpu.webgpu.GPUPrimitiveState(e,t,r,s,a)}static newDepthStencil(e,t,r,s,a,i,n,o,u,p){return new easygpu.webgpu.GPUDepthStencilState(e,t,r,s,a,i,n,o,u,p)}static newMultisample(e,t,r){return new easygpu.webgpu.GPUMultisampleState(e,t,r)}get[Symbol.toStringTag](){return"GPURenderPipelineDescriptor"}},easygpu.webgpu.GPURenderPipelineDescriptor.prototype.newVrtex=easygpu.webgpu.GPURenderPipelineDescriptor.newVrtex,easygpu.webgpu.GPURenderPipelineDescriptor.prototype.newFragment=easygpu.webgpu.GPURenderPipelineDescriptor.newFragment,easygpu.webgpu.GPURenderPipelineDescriptor.prototype.newPrimitive=easygpu.webgpu.GPURenderPipelineDescriptor.newPrimitive,easygpu.webgpu.GPURenderPipelineDescriptor.prototype.newDepthStencil=easygpu.webgpu.GPURenderPipelineDescriptor.newDepthStencil,easygpu.webgpu.GPURenderPipelineDescriptor.prototype.newMultisample=easygpu.webgpu.GPURenderPipelineDescriptor.newMultisample,easygpu.webgpu.GPUPrimitiveState=class{constructor(e,t,r,s,a){this.topology=e,this.stripIndexFormat=t,this.frontFace=r,this.cullMode=s,this.unclippedDepth=a}setTopology(e){this.topology=e}setStripIndexFormat(e){this.stripIndexFormat=e}setFrontFace(e){this.frontFace=e}setCullMode(e){this.cullMode=e}setUnclippedDepth(e){this.unclippedDepth=e}static getAvailableTopologys(){return new easygpu.webgpu.GPUPrimitiveTopology}static getAvailableStripIndexFormats(){return new easygpu.webgpu.GPUIndexFormat}static getAvailableFrontFaces(){return new easygpu.webgpu.GPUFrontFace}static getAvailableCullModes(){return new easygpu.webgpu.GPUCullMode}get[Symbol.toStringTag](){return"GPUPrimitiveState"}},easygpu.webgpu.GPUPrimitiveState.prototype.getAvailableTopologys=easygpu.webgpu.GPUPrimitiveState.getAvailableTopologys,easygpu.webgpu.GPUPrimitiveState.prototype.getAvailableStripIndexFormats=easygpu.webgpu.GPUPrimitiveState.getAvailableStripIndexFormats,easygpu.webgpu.GPUPrimitiveState.prototype.getAvailableFrontFaces=easygpu.webgpu.GPUPrimitiveState.getAvailableFrontFaces,easygpu.webgpu.GPUPrimitiveState.prototype.getAvailableCullModes=easygpu.webgpu.GPUPrimitiveState.getAvailableCullModes,easygpu.webgpu.GPUPrimitiveTopology=class{point_list="point-list";line_list="line-list";line_strip="line-strip";triangle_list="triangle-list";triangle_strip="triangle-strip";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUPrimitiveTopology"}},easygpu.webgpu.GPUFrontFace=class{ccw="ccw";cw="cw";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUFrontFace"}},easygpu.webgpu.GPUCullMode=class{none="none";front="front";back="back";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUCullMode"}},easygpu.webgpu.GPUMultisampleState=class{constructor(e,t,r){this.count=e,this.mask=t,this.alphaToCoverageEnabled=r}setCount(e){this.count=e}setMask(e){this.mask=e}setAlphaToCoverageEnabled(e){this.alphaToCoverageEnabled=e}get[Symbol.toStringTag](){return"GPUMultisampleState"}},easygpu.webgpu.GPUFragmentState=class extends easygpu.webgpu.GPUProgrammableStage{constructor(e,t,r,s=[]){super(e,t,r),this.targets=s}setTargets(e){this.targets=e}static newTarget(e,t,r){return new easygpu.webgpu.GPUColorTargetState(e,t,r)}get[Symbol.toStringTag](){return"GPUFragmentState"}},easygpu.webgpu.GPUFragmentState.prototype.newTarget=easygpu.webgpu.GPUFragmentState.newTarget,easygpu.webgpu.GPUColorTargetState=class{constructor(e,t,r){this.format=e,this.blend=t,this.writeMask=r}setFormat(e){this.format=e}setBlend(e){this.blend=e}setWriteMask(e){this.writeMask=e}static newBlend(e,t){return new easygpu.webgpu.GPUBlendState(e,t)}static getAvailableFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableWriteMasks(){return new easygpu.webgpu.GPUColorWrite}get[Symbol.toStringTag](){return"GPUColorTargetState"}},easygpu.webgpu.GPUColorTargetState.prototype.newBlend=easygpu.webgpu.GPUColorTargetState.newBlend,easygpu.webgpu.GPUColorTargetState.prototype.getAvailableFormats=easygpu.webgpu.GPUColorTargetState.getAvailableFormats,easygpu.webgpu.GPUColorTargetState.prototype.getAvailableWriteMasks=easygpu.webgpu.GPUColorTargetState.getAvailableWriteMasks,easygpu.webgpu.GPUBlendState=class{constructor(e=this.newColor(),t=this.newColor()){this.color=e,this.alpha=t}setColor(e){this.color=e}setAlpha(e){this.alpha=e}static newColor(e,t,r){return new easygpu.webgpu.GPUBlendComponent(e,t,r)}static newAlpha(e,t,r){return new easygpu.webgpu.GPUBlendComponent(e,t,r)}get[Symbol.toStringTag](){return"GPUBlendState"}},easygpu.webgpu.GPUBlendState.prototype.newColor=easygpu.webgpu.GPUBlendState.newColor,easygpu.webgpu.GPUBlendState.prototype.newAlpha=easygpu.webgpu.GPUBlendState.newAlpha,easygpu.webgpu.GPUColorWrite=class{RED=1;GREEN=2;BLUE=4;ALPHA=8;ALL=15;constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUColorWrite"}},easygpu.webgpu.GPUBlendComponent=class{constructor(e,t,r){this.operation=e,this.srcFactor=t,this.dstFactor=r}setOperation(e){this.operation=e}setSrcFactor(e){this.srcFactor=e}setDstFactor(e){this.dstFactor=e}static getAvailableOperations(){return new easygpu.webgpu.GPUBlendOperation}static getAvailableSrcFactors(){return new easygpu.webgpu.GPUBlendFactor}static getAvailableDstFactors(){return new easygpu.webgpu.GPUBlendFactor}get[Symbol.toStringTag](){return"GPUBlendComponent"}},easygpu.webgpu.GPUBlendComponent.prototype.getAvailableOperations=easygpu.webgpu.GPUBlendComponent.getAvailableOperations,easygpu.webgpu.GPUBlendComponent.prototype.getAvailableSrcFactors=easygpu.webgpu.GPUBlendComponent.getAvailableSrcFactors,easygpu.webgpu.GPUBlendComponent.prototype.getAvailableDstFactors=easygpu.webgpu.GPUBlendComponent.getAvailableDstFactors,easygpu.webgpu.GPUBlendFactor=class{zero="zero";one="one";src="src";one_minus_src="one-minus-src";src_alpha="src-alpha";one_minus_src_alpha="one-minus-src-alpha";dst="dst";one_minus_dst="one-minus-dst";dst_alpha="dst-alpha";one_minus_dst_alpha="one-minus-dst-alpha";src_alpha_saturated="src-alpha-saturated";constant="constant";one_minus_constant="one-minus-constant";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUBlendFactor"}},easygpu.webgpu.GPUBlendOperation=class{add="add";subtract="subtract";reverse_subtract="reverse-subtract";min="min";max="max";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUBlendOperation"}},easygpu.webgpu.GPUDepthStencilState=class{constructor(e,t,r,s,a,i,n,o,u,p){this.format=e,this.depthWriteEnabled=t,this.depthCompare=r,this.stencilFront=s,this.stencilBack=a,this.stencilReadMask=i,this.stencilWriteMask=n,this.depthBias=o,this.depthBiasSlopeScale=u,this.depthBiasClamp=p}setFormat(e){this.format=e}setDepthWriteEnabled(e){this.depthWriteEnabled=e}setDepthCompare(e){this.depthCompare=e}setStencilFront(e){this.stencilFront=e}setStencilBack(e){this.stencilBack=e}setStencilReadMask(e){this.stencilReadMask=e}setStencilWriteMask(e){this.stencilWriteMask=e}setDepthBias(e){this.depthBias=e}setDepthBiasSlopeScale(e){this.depthBiasSlopeScale=e}setDepthBiasClamp(e){this.depthBiasClamp=e}static newStencilFront(){return new easygpu.webgpu.GPUStencilFaceState}static newStencilBack(){return new easygpu.webgpu.GPUStencilFaceState}static getAvailableFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableDepthCompares(){return new easygpu.webgpu.GPUCompareFunction}get[Symbol.toStringTag](){return"GPUDepthStencilState"}},easygpu.webgpu.GPUDepthStencilState.prototype.newStencilFront=easygpu.webgpu.GPUDepthStencilState.newStencilFront,easygpu.webgpu.GPUDepthStencilState.prototype.newStencilBack=easygpu.webgpu.GPUDepthStencilState.newStencilBack,easygpu.webgpu.GPUDepthStencilState.prototype.getAvailableFormats=easygpu.webgpu.GPUDepthStencilState.getAvailableFormats,easygpu.webgpu.GPUDepthStencilState.prototype.getAvailableDepthCompares=easygpu.webgpu.GPUDepthStencilState.getAvailableDepthCompares,easygpu.webgpu.GPUStencilFaceState=class{constructor(e,t,r,s){this.compare=e,this.failOp=t,this.depthFailOp=r,this.passOp=s}setCompare(e){this.compare=e}setFailOp(e){this.failOp=e}setDepthFailOp(e){this.depthFailOp=e}setPassOp(e){this.passOp=e}static getAvailableCompares(){return new easygpu.webgpu.GPUCompareFunction}static getAvailableFailOps(){return new easygpu.webgpu.GPUStencilOperation}static getAvailableDepthFailOps(){return new easygpu.webgpu.GPUStencilOperation}static getAvailablePassOps(){return new easygpu.webgpu.GPUStencilOperation}get[Symbol.toStringTag](){return"GPUStencilFaceState"}},easygpu.webgpu.GPUStencilFaceState.prototype.getAvailableCompares=easygpu.webgpu.GPUStencilFaceState.getAvailableCompares,easygpu.webgpu.GPUStencilFaceState.prototype.getAvailableFailOps=easygpu.webgpu.GPUStencilFaceState.getAvailableFailOps,easygpu.webgpu.GPUStencilFaceState.prototype.getAvailableDepthFailOps=easygpu.webgpu.GPUStencilFaceState.getAvailableDepthFailOps,easygpu.webgpu.GPUStencilFaceState.prototype.getAvailablePassOps=easygpu.webgpu.GPUStencilFaceState.getAvailablePassOps,easygpu.webgpu.GPUStencilOperation=class{keep="keep";zero="zero";replace="replace";invert="invert";increment_clamp="increment-clamp";decrement_clamp="decrement-clamp";increment_wrap="increment-wrap";decrement_wrap="decrement-wrap";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUStencilOperation"}},easygpu.webgpu.GPUIndexFormat=class{uint16="uint16";uint32="uint32";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUIndexFormat"}},easygpu.webgpu.GPUVertexFormat=class{uint8x2=new String("uint8x2");uint8x4=new String("uint8x4");sint8x2=new String("sint8x2");sint8x4=new String("sint8x4");unorm8x2=new String("unorm8x2");unorm8x4=new String("unorm8x4");snorm8x2=new String("snorm8x2");snorm8x4=new String("snorm8x4");uint16x2=new String("uint16x2");uint16x4=new String("uint16x4");sint16x2=new String("sint16x2");sint16x4=new String("sint16x4");unorm16x2=new String("unorm16x2");unorm16x4=new String("unorm16x4");snorm16x2=new String("snorm16x2");snorm16x4=new String("snorm16x4");float16x2=new String("float16x2");float16x4=new String("float16x4");float32=new String("float32");float32x2=new String("float32x2");float32x3=new String("float32x3");float32x4=new String("float32x4");uint32=new String("uint32");uint32x2=new String("uint32x2");uint32x3=new String("uint32x3");uint32x4=new String("uint32x4");sint32=new String("sint32");sint32x2=new String("sint32x2");sint32x3=new String("sint32x3");sint32x4=new String("sint32x4");unorm10_10_10_2=new String("unorm10-10-10-2");constructor(){this.uint8x2.components=2,this.uint8x2.byteSize=2,this.uint8x4.components=4,this.uint8x4.byteSize=4,this.sint8x2.components=2,this.sint8x2.byteSize=2,this.sint8x4.components=4,this.sint8x4.byteSize=4,this.unorm8x2.components=2,this.unorm8x2.byteSize=2,this.unorm8x4.components=4,this.unorm8x4.byteSize=4,this.snorm8x2.components=2,this.snorm8x2.byteSize=2,this.snorm8x4.components=4,this.snorm8x4.byteSize=4,this.uint16x2.components=2,this.uint16x2.byteSize=4,this.uint16x4.components=4,this.uint16x4.byteSize=8,this.sint16x2.components=2,this.sint16x2.byteSize=4,this.sint16x4.components=4,this.sint16x4.byteSize=8,this.unorm16x2.components=2,this.unorm16x2.byteSize=4,this.unorm16x4.components=4,this.unorm16x4.byteSize=8,this.snorm16x2.components=2,this.snorm16x2.byteSize=4,this.snorm16x4.components=4,this.snorm16x4.byteSize=8,this.float16x2.components=2,this.float16x2.byteSize=4,this.float16x4.components=4,this.float16x4.byteSize=8,this.float32.components=1,this.float32.byteSize=4,this.float32x2.components=2,this.float32x2.byteSize=8,this.float32x3.components=3,this.float32x3.byteSize=12,this.float32x4.components=4,this.float32x4.byteSize=16,this.uint32.components=1,this.uint32.byteSize=4,this.uint32x2.components=2,this.uint32x2.byteSize=8,this.uint32x3.components=3,this.uint32x3.byteSize=12,this.uint32x4.components=4,this.uint32x4.byteSize=16,this.sint32.components=1,this.sint32.byteSize=4,this.sint32x2.components=2,this.sint32x2.byteSize=8,this.sint32x3.components=3,this.sint32x3.byteSize=12,this.sint32x4.components=4,this.sint32x4.byteSize=16,this.unorm10_10_10_2.components=4,this.unorm10_10_10_2.byteSize=4,Object.freeze(this)}componentsOf(e){switch(e){case"unorm10-10-10-2":return this.unorm10_10_10_2.components;default:return this[e].components}}byteSizeOf(e){switch(e){case"unorm10-10-10-2":return this.unorm10_10_10_2.byteSize;default:return this[e].byteSize}}get[Symbol.toStringTag](){return"GPUVertexFormat"}},easygpu.webgpu.GPUVertexStepMode=class{vertex="vertex";instance="instance";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUVertexStepMode"}},easygpu.webgpu.GPUVertexState=class extends easygpu.webgpu.GPUProgrammableStage{constructor(e,t,r,s=[]){super(e,t,r),this.buffers=s}setBuffers(e){this.buffers=e}static newBuffer(e,t,r){return new easygpu.webgpu.GPUVertexBufferLayout(e,t,r)}get[Symbol.toStringTag](){return"GPUVertexState"}},easygpu.webgpu.GPUVertexState.prototype.newBuffer=easygpu.webgpu.GPUVertexState.newBuffer,easygpu.webgpu.GPUVertexBufferLayout=class{constructor(e,t,r=[]){this.arrayStride=e,this.stepMode=t,this.attributes=r}setArrayStride(e){this.arrayStride=e}setStepMode(e){this.stepMode=e}setAttributes(e){this.attributes=e}static newAttribute(e,t,r){return new easygpu.webgpu.GPUVertexAttribute(e,t,r)}static getAvailableStepModes(){return new easygpu.webgpu.GPUVertexStepMode}},easygpu.webgpu.GPUVertexBufferLayout.prototype.newAttribute=easygpu.webgpu.GPUVertexBufferLayout.newAttribute,easygpu.webgpu.GPUVertexBufferLayout.prototype.newgetAvailableStepModesAttribute=easygpu.webgpu.GPUVertexBufferLayout.getAvailableStepModes,easygpu.webgpu.GPUVertexAttribute=class{constructor(e,t,r){this.format=e,this.offset=t,this.shaderLocation=r}setFormat(e){this.format=e}setOffset(e){this.offset=e}setShaderLocation(e){this.shaderLocation=e}static getAvailableFormats(){return new easygpu.webgpu.GPUVertexFormat}get[Symbol.toStringTag](){return"GPUVertexAttribute"}},easygpu.webgpu.GPUVertexAttribute.prototype.getAvailableFormats=easygpu.webgpu.GPUVertexAttribute.getAvailableFormats,easygpu.webgpu.GPUImageDataLayout=class{constructor(e,t,r){this.offset=e,this.bytesPerRow=t,this.rowsPerImage=r}setOffset(e){this.offset=e}setBytesPerRow(e){this.bytesPerRow=e}setRowsPerImage(e){this.rowsPerImage=e}get[Symbol.toStringTag](){return"GPUImageDataLayout"}},easygpu.webgpu.GPUImageCopyBuffer=class extends easygpu.webgpu.GPUImageDataLayout{constructor(e,t,r,s){super(e,t,r),this.buffer=s}setBuffer(e){this.buffer=e}get[Symbol.toStringTag](){return"GPUImageCopyBuffer"}},easygpu.webgpu.GPUImageCopyTexture=class{constructor(e,t,r={},s){this.texture=e,this.mipLevel=t,this.origin=r,this.aspect=s}setTexture(e){this.texture=e}setMipLevel(e){this.mipLevel=e}setOrigin(e){this.origin=e}setAspect(e){this.aspect=e}static getAvailableAspects(){return new easygpu.webgpu.GPUTextureAspect}get[Symbol.toStringTag](){return"GPUImageCopyTexture"}},easygpu.webgpu.GPUImageCopyTexture.prototype.getAvailableAspects=easygpu.webgpu.GPUImageCopyTexture.getAvailableAspects,easygpu.webgpu.GPUImageCopyTextureTagged=class extends easygpu.webgpu.GPUImageCopyTexture{constructor(e,t,r={},s,a,i){super(e,t,{},s),this.colorSpace=a,this.premultipliedAlpha=i}setColorSpace(e){this.colorSpace=e}setPremultipliedAlpha(e){this.premultipliedAlpha=e}get[Symbol.toStringTag](){return"GPUImageCopyTextureTagged"}},easygpu.webgpu.GPUImageCopyExternalImage=class{constructor(e,t={},r){this.source=e,this.origin=t,this.flipY=r}setSource(e){this.source=e}setOrigin(e){this.origin=e}setFlipY(e){this.flipY=e}get[Symbol.toStringTag](){return"GPUImageCopyExternalImage"}},easygpu.webgpu.GPUCommandBufferDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e){super(e)}get[Symbol.toStringTag](){return"GPUCommandBufferDescriptor"}},easygpu.webgpu.GPUCommandEncoderDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e){super(e)}get[Symbol.toStringTag](){return"GPUCommandEncoderDescriptor"}},easygpu.webgpu.GPUComputePassTimestampWrites=class{constructor(e,t,r){this.querySet=e,this.beginningOfPassWriteIndex=t,this.endOfPassWriteIndex=r}setQuerySet(e){this.querySet=e}setBeginningOfPassWriteIndex(e){this.beginningOfPassWriteIndex=e}setEndOfPassWriteIndex(e){this.endOfPassWriteIndex=e}get[Symbol.toStringTag](){return"GPUComputePassTimestampWrites"}},easygpu.webgpu.GPUComputePassDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e){super(e)}get[Symbol.toStringTag](){return"GPUComputePassDescriptor"}},easygpu.webgpu.GPURenderPassTimestampWrites=class{constructor(e,t,r){this.querySet=e,this.beginningOfPassWriteIndex=t,this.endOfPassWriteIndex=t}setQuerySet(e){this.querySet=e}setBeginningOfPassWriteIndex(e){this.beginningOfPassWriteIndex=e}setEndOfPassWriteIndex(e){this.endOfPassWriteIndex=e}get[Symbol.toStringTag](){return"GPURenderPassTimestampWrites"}},easygpu.webgpu.GPURenderPassDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e=[],t,r,s,a,i){super(i),this.colorAttachments=e,this.depthStencilAttachment=t,this.occlusionQuerySet=r,this.timestampWrites=s,this.maxDrawCount=a}setColorAttachments(e){this.colorAttachments=e}setDepthStencilAttachment(e){this.depthStencilAttachment=e}setOcclusionQuerySet(e){this.occlusionQuerySet=e}setTimestampWrites(e){this.timestampWrites=e}setMaxDrawCount(e){this.maxDrawCount=e}static newColorAttachment(){return new easygpu.webgpu.GPURenderPassColorAttachment}static newDepthStencilAttachment(){return new easygpu.webgpu.GPURenderPassDepthStencilAttachment}static newTimestampWrites(){return new easygpu.webgpu.GPURenderPassTimestampWrites}get[Symbol.toStringTag](){return"GPURenderPassDescriptor"}},easygpu.webgpu.GPURenderPassDescriptor.prototype.newColorAttachment=easygpu.webgpu.GPURenderPassDescriptor.newColorAttachment,easygpu.webgpu.GPURenderPassDescriptor.prototype.newDepthStencilAttachment=easygpu.webgpu.GPURenderPassDescriptor.newDepthStencilAttachment,easygpu.webgpu.GPURenderPassDescriptor.prototype.newTimestampWrites=easygpu.webgpu.GPURenderPassDescriptor.newTimestampWrites,easygpu.webgpu.GPURenderPassColorAttachment=class{constructor(e,t,r,s,a,i){this.view=e,this.depthSlice=t,this.resolveTarget=r,this.clearValue=s,this.loadOp=a,this.storeOp=i}setView(e){this.view=e}setDepthSlice(e){this.depthSlice=e}setResolveTarget(e){this.resolveTarget=e}setClearValue(e){this.clearValue=e}setLoadOp(e){this.loadOp=e}setStoreOp(e){this.storeOp=e}static newClearValue(e,t,r,s){return new easygpu.webgpu.GPUColorDict(e,t,r,s)}static getAvailableLoadOps(){return new easygpu.webgpu.GPULoadOp}static getAvailableStoreOps(){return new easygpu.webgpu.GPUStoreOp}get[Symbol.toStringTag](){return"GPURenderPassColorAttachment"}},easygpu.webgpu.GPURenderPassColorAttachment.prototype.newClearValue=easygpu.webgpu.GPURenderPassColorAttachment.newClearValue,easygpu.webgpu.GPURenderPassColorAttachment.prototype.getAvailableLoadOps=easygpu.webgpu.GPURenderPassColorAttachment.getAvailableLoadOps,easygpu.webgpu.GPURenderPassColorAttachment.prototype.getAvailableStoreOps=easygpu.webgpu.GPURenderPassColorAttachment.getAvailableStoreOps,easygpu.webgpu.GPURenderPassDepthStencilAttachment=class{constructor(e,t,r,s,a,i,n,o,u){this.view=e,this.depthClearValue=t,this.depthLoadOp=r,this.depthStoreOp=s,this.depthReadOnly=a,this.stencilClearValue=i,this.stencilLoadOp=n,this.stencilStoreOp=o,this.stencilReadOnly=u}setView(e){this.view=e}setDepthClearValue(e){this.depthClearValue=e}setDepthLoadOp(e){this.depthLoadOp=e}setDepthStoreOp(e){this.depthStoreOp=e}setDepthReadOnly(e){this.depthReadOnly=e}setStencilClearValue(e){this.stencilClearValue=e}setStencilLoadOp(e){this.stencilLoadOp=e}setStencilStoreOp(e){this.stencilStoreOp=e}setStencilReadOnly(e){this.stencilReadOnly=e}static getAvailableDepthLoadOps(){return new easygpu.webgpu.GPULoadOp}static getAvailableDepthStoreOps(){return new easygpu.webgpu.GPUStoreOp}static getAvailableStencilLoadOps(){return new easygpu.webgpu.GPULoadOp}static getAvailableStencilStoreOps(){return new easygpu.webgpu.GPUStoreOp}get[Symbol.toStringTag](){return"GPURenderPassDepthStencilAttachment"}},easygpu.webgpu.GPURenderPassDepthStencilAttachment.prototype.getAvailableDepthLoadOps=easygpu.webgpu.GPURenderPassDepthStencilAttachment.getAvailableDepthLoadOps,easygpu.webgpu.GPURenderPassDepthStencilAttachment.prototype.getAvailableDepthStoreOps=easygpu.webgpu.GPURenderPassDepthStencilAttachment.getAvailableDepthStoreOps,easygpu.webgpu.GPURenderPassDepthStencilAttachment.prototype.getAvailableStencilLoadOps=easygpu.webgpu.GPURenderPassDepthStencilAttachment.getAvailableStencilLoadOps,easygpu.webgpu.GPURenderPassDepthStencilAttachment.prototype.getAvailableStencilStoreOps=easygpu.webgpu.GPURenderPassDepthStencilAttachment.getAvailableStencilStoreOps,easygpu.webgpu.GPULoadOp=class{load="load";clear="clear";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPULoadOp"}},easygpu.webgpu.GPUStoreOp=class{load="store";discard="discard";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return" GPUStoreOp"}},easygpu.webgpu.GPURenderPassLayout=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e=[],t,r,s){super(s),this.colorFormats=e,this.depthStencilFormat=t,this.sampleCount=r}setColorFormats(e){this.colorFormats=e}setDepthStencilFormat(e){this.depthStencilFormat=e}setSampleCount(e){this.sampleCount=e}static getAvailableColorFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}static getAvailableDepthStencilFormats(e){return new easygpu.webgpu.GPUTextureFormat(e)}get[Symbol.toStringTag](){return"GPURenderPassLayout"}},easygpu.webgpu.GPURenderPassLayout.prototype.getAvailableColorFormats=easygpu.webgpu.GPURenderPassLayout.getAvailableColorFormats,easygpu.webgpu.GPURenderPassLayout.prototype.getAvailableDepthStencilFormats=easygpu.webgpu.GPURenderPassLayout.getAvailableDepthStencilFormats,easygpu.webgpu.GPURenderBundleDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e){super(e)}get[Symbol.toStringTag](){return"GPURenderBundleDescriptor"}},easygpu.webgpu.GPURenderBundleEncoderDescriptor=class extends easygpu.webgpu.GPURenderPassLayout{constructor(e=[],t,r,s,a,i){super(e,t,r,i),this.depthStencilFormat=t,this.sampleCount=r}setDepthStencilFormat(e){this.depthStencilFormat=e}setSampleCount(e){this.sampleCount=e}get[Symbol.toStringTag](){return"GPURenderBundleEncoderDescriptor"}},easygpu.webgpu.GPUQueueDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e){super(e)}get[Symbol.toStringTag](){return"GPUQueueDescriptor"}},easygpu.webgpu.GPUQuerySetDescriptor=class extends easygpu.webgpu.GPUObjectDescriptorBase{constructor(e,t,r){super(r),this.type=e,this.count=t}setType(e){this.type=e}setCount(e){this.count=e}static getAvailableTypes(){return new easygpu.webgpu.GPUQueryType}get[Symbol.toStringTag](){return"GPUQuerySetDescriptor"}},easygpu.webgpu.GPUQuerySetDescriptor.prototype.getAvailableTypes=easygpu.webgpu.GPUQuerySetDescriptor.getAvailableTypes,easygpu.webgpu.GPUQueryType=class{occlusion="occlusion";timestamp="timestamp";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUQueryType"}},easygpu.webgpu.GPUCanvasAlphaMode=class{opaque="lopaque";premultiplied="premultiplied";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUCanvasAlphaMode"}},easygpu.webgpu.GPUCanvasConfiguration=class{constructor(e,t,r,s,a,i){this.device=e,this.format=t,this.usage=r,this.viewFormats=s,this.colorSpace=a,this.alphaMode=i}setDevice(e){this.device=e}setFormat(e){this.format=e}setUsage(e){this.usage=e}setViewFormats(e){this.viewFormats=e}setColorSpace(e){this.colorSpace=e}setAlphaMode(e){this.alphaMode=e}static getAvailableFormats(){return new easygpu.webgpu.GPUTextureFormat}static getAvailableUsages(){return new easygpu.webgpu.GPUTextureUsageFlags}static getAvailableViewFormats(){return new easygpu.webgpu.GPUTextureFormat}static getAvailableAlphaModes(){return new easygpu.webgpu.GPUCanvasAlphaMode}get[Symbol.toStringTag](){return"GPUCanvasConfiguration"}},easygpu.webgpu.GPUCanvasConfiguration.prototype.getAvailableFormats=easygpu.webgpu.GPUCanvasConfiguration.getAvailableFormats,easygpu.webgpu.GPUCanvasConfiguration.prototype.getAvailableUsages=easygpu.webgpu.GPUCanvasConfiguration.getAvailableUsages,easygpu.webgpu.GPUCanvasConfiguration.prototype.getAvailableViewFormats=easygpu.webgpu.GPUCanvasConfiguration.getAvailableViewFormats,easygpu.webgpu.GPUCanvasConfiguration.prototype.getAvailableAlphaModes=easygpu.webgpu.GPUCanvasConfiguration.getAvailableAlphaModes,easygpu.webgpu.GPUDeviceLostReason=class{unknown="unknown";destroyed="destroyed";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUDeviceLostReason"}},easygpu.webgpu.GPUErrorFilter=class{validation="validation";out_of_memory="out-of-memory";internal="internal";constructor(){Object.freeze(this)}get[Symbol.toStringTag](){return"GPUErrorFilter"}},easygpu.webgpu.GPUUncapturedErrorEventInit=class{constructor(e,t,r,s){this.bubbles=e,this.cancelable=t,this.composed=r,this.error=s}setBubbles(e){this.bubbles=e}setCancelable(e){this.cancelable=e}setComposed(e){this.composed=e}setError(e){this.error=e}get[Symbol.toStringTag](){return"GPUUncapturedErrorEventInit"}},easygpu.webgpu.GPUColorDict=class{constructor(e,t,r,s){this.r=e,this.g=t,this.b=r,this.a=s}setR(e){this.r=e}setG(e){this.g=e}setB(e){this.b=e}setA(e){this.a=e}get[Symbol.toStringTag](){return"GPUColorDict"}},easygpu.webgpu.GPUOrigin2DDict=class{constructor(e,t){this.x=e,this.y=t}setX(e){this.x=e}setY(e){this.y=e}get[Symbol.toStringTag](){return"GPUOrigin2DDict"}},easygpu.webgpu.GPUOrigin3DDict=class{constructor(e,t,r){this.x=e,this.y=t,this.z=r}setX(e){this.x=e}setY(e){this.y=e}setZ(e){this.z=e}get[Symbol.toStringTag](){return"GPUOrigin3DDict"}},easygpu.webgpu.GPUExtent3DDict=class{constructor(e,t,r){this.width=e,this.height=t,this.depthOrArrayLayers=r}setWidth(e){this.width=e}setHeight(e){this.height=e}setDepthOrArrayLayers(e){this.depthOrArrayLayers=e}get[Symbol.toStringTag](){return"GPUExtent3DDict"}};